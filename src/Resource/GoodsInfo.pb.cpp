// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GoodsInfo.proto

#include "GoodsInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace X {
namespace Res {
class GoodsInfo_PriceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GoodsInfo_Price>
      _instance;
} _GoodsInfo_Price_default_instance_;
class GoodsInfo_GoodsAttrDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GoodsInfo_GoodsAttr>
      _instance;
} _GoodsInfo_GoodsAttr_default_instance_;
class GoodsInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GoodsInfo>
      _instance;
} _GoodsInfo_default_instance_;
class GoodsInfo_ARRAYDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GoodsInfo_ARRAY>
      _instance;
} _GoodsInfo_ARRAY_default_instance_;
}  // namespace Res
}  // namespace X
namespace protobuf_GoodsInfo_2eproto {
void InitDefaultsGoodsInfo_PriceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::X::Res::_GoodsInfo_Price_default_instance_;
    new (ptr) ::X::Res::GoodsInfo_Price();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::X::Res::GoodsInfo_Price::InitAsDefaultInstance();
}

void InitDefaultsGoodsInfo_Price() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGoodsInfo_PriceImpl);
}

void InitDefaultsGoodsInfo_GoodsAttrImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::X::Res::_GoodsInfo_GoodsAttr_default_instance_;
    new (ptr) ::X::Res::GoodsInfo_GoodsAttr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::X::Res::GoodsInfo_GoodsAttr::InitAsDefaultInstance();
}

void InitDefaultsGoodsInfo_GoodsAttr() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGoodsInfo_GoodsAttrImpl);
}

void InitDefaultsGoodsInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_GoodsInfo_2eproto::InitDefaultsGoodsInfo_Price();
  protobuf_GoodsInfo_2eproto::InitDefaultsGoodsInfo_GoodsAttr();
  {
    void* ptr = &::X::Res::_GoodsInfo_default_instance_;
    new (ptr) ::X::Res::GoodsInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::X::Res::GoodsInfo::InitAsDefaultInstance();
}

void InitDefaultsGoodsInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGoodsInfoImpl);
}

void InitDefaultsGoodsInfo_ARRAYImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_GoodsInfo_2eproto::InitDefaultsGoodsInfo();
  {
    void* ptr = &::X::Res::_GoodsInfo_ARRAY_default_instance_;
    new (ptr) ::X::Res::GoodsInfo_ARRAY();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::X::Res::GoodsInfo_ARRAY::InitAsDefaultInstance();
}

void InitDefaultsGoodsInfo_ARRAY() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGoodsInfo_ARRAYImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo_Price, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo_Price, price_dq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo_Price, price_gold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo_Price, price_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo_GoodsAttr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo_GoodsAttr, attr_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo_GoodsAttr, attr_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, goods_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, level_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, club_vip_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, qb_2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, consume_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, time_unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, is_online_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, can_buy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, can_recharge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, online_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, offline_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, privileged_plat_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, privileged_plat_is_online_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, privileged_plat_can_buy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, privileged_plat_can_recharge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, payment_terms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, valid_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, sort_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, suit_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, bag_sort_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, price_discount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, vip_discount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, price_table_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, goods_attr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, limit_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo, subsystemid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo_ARRAY, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::GoodsInfo_ARRAY, items_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::X::Res::GoodsInfo_Price)},
  { 8, -1, sizeof(::X::Res::GoodsInfo_GoodsAttr)},
  { 15, -1, sizeof(::X::Res::GoodsInfo)},
  { 51, -1, sizeof(::X::Res::GoodsInfo_ARRAY)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::X::Res::_GoodsInfo_Price_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::X::Res::_GoodsInfo_GoodsAttr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::X::Res::_GoodsInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::X::Res::_GoodsInfo_ARRAY_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "GoodsInfo.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017GoodsInfo.proto\022\005X.Res\"\333\006\n\tGoodsInfo\022\020"
      "\n\010goods_id\030\001 \001(\r\022\014\n\004name\030\002 \001(\014\022\013\n\003sex\030\003 "
      "\001(\r\022\023\n\013level_limit\030\004 \001(\r\022\026\n\016club_vip_lev"
      "el\030\005 \001(\005\022\014\n\004qb_2\030\006 \001(\005\022\024\n\014consume_type\030\007"
      " \001(\r\022\021\n\ttime_unit\030\010 \001(\r\022\021\n\tis_online\030\t \001"
      "(\r\022\017\n\007can_buy\030\n \001(\r\022\024\n\014can_recharge\030\013 \001("
      "\r\022\023\n\013online_time\030\014 \001(\014\022\024\n\014offline_time\030\r"
      " \001(\014\022\037\n\027privileged_plat_id_list\030\016 \003(\r\022!\n"
      "\031privileged_plat_is_online\030\017 \001(\r\022\037\n\027priv"
      "ileged_plat_can_buy\030\020 \001(\r\022$\n\034privileged_"
      "plat_can_recharge\030\021 \001(\r\022\025\n\rpayment_terms"
      "\030\022 \001(\r\022\022\n\nvalid_time\030\023 \001(\014\022\025\n\rsort_prior"
      "ity\030\024 \001(\r\022\023\n\013suit_number\030\025 \001(\005\022\031\n\021bag_so"
      "rt_priority\030\026 \001(\r\022\016\n\006status\030\027 \001(\014\022\014\n\004ran"
      "k\030\030 \001(\r\022\026\n\016price_discount\030\031 \001(\r\022\024\n\014vip_d"
      "iscount\030\032 \001(\r\022+\n\013price_table\030\033 \003(\0132\026.X.R"
      "es.GoodsInfo.Price\022.\n\ngoods_attr\030\034 \003(\0132\032"
      ".X.Res.GoodsInfo.GoodsAttr\022\023\n\013descriptio"
      "n\030\035 \001(\014\022\020\n\010limit_id\030\036 \001(\r\022\023\n\013subSystemId"
      "\030\037 \001(\014\032B\n\005Price\022\020\n\010price_dq\030\001 \001(\r\022\022\n\npri"
      "ce_gold\030\002 \001(\r\022\023\n\013price_value\030\003 \001(\r\0322\n\tGo"
      "odsAttr\022\021\n\tattr_type\030\001 \001(\r\022\022\n\nattr_value"
      "\030\002 \001(\r\"2\n\017GoodsInfo_ARRAY\022\037\n\005items\030\001 \003(\013"
      "2\020.X.Res.GoodsInfob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 946);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GoodsInfo.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_GoodsInfo_2eproto
namespace X {
namespace Res {

// ===================================================================

void GoodsInfo_Price::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GoodsInfo_Price::kPriceDqFieldNumber;
const int GoodsInfo_Price::kPriceGoldFieldNumber;
const int GoodsInfo_Price::kPriceValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GoodsInfo_Price::GoodsInfo_Price()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GoodsInfo_2eproto::InitDefaultsGoodsInfo_Price();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:X.Res.GoodsInfo.Price)
}
GoodsInfo_Price::GoodsInfo_Price(const GoodsInfo_Price& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&price_dq_, &from.price_dq_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_value_) -
    reinterpret_cast<char*>(&price_dq_)) + sizeof(price_value_));
  // @@protoc_insertion_point(copy_constructor:X.Res.GoodsInfo.Price)
}

void GoodsInfo_Price::SharedCtor() {
  ::memset(&price_dq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_value_) -
      reinterpret_cast<char*>(&price_dq_)) + sizeof(price_value_));
  _cached_size_ = 0;
}

GoodsInfo_Price::~GoodsInfo_Price() {
  // @@protoc_insertion_point(destructor:X.Res.GoodsInfo.Price)
  SharedDtor();
}

void GoodsInfo_Price::SharedDtor() {
}

void GoodsInfo_Price::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoodsInfo_Price::descriptor() {
  ::protobuf_GoodsInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GoodsInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GoodsInfo_Price& GoodsInfo_Price::default_instance() {
  ::protobuf_GoodsInfo_2eproto::InitDefaultsGoodsInfo_Price();
  return *internal_default_instance();
}

GoodsInfo_Price* GoodsInfo_Price::New(::google::protobuf::Arena* arena) const {
  GoodsInfo_Price* n = new GoodsInfo_Price;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GoodsInfo_Price::Clear() {
// @@protoc_insertion_point(message_clear_start:X.Res.GoodsInfo.Price)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&price_dq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_value_) -
      reinterpret_cast<char*>(&price_dq_)) + sizeof(price_value_));
  _internal_metadata_.Clear();
}

bool GoodsInfo_Price::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:X.Res.GoodsInfo.Price)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 price_dq = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_dq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 price_gold = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_gold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 price_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:X.Res.GoodsInfo.Price)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:X.Res.GoodsInfo.Price)
  return false;
#undef DO_
}

void GoodsInfo_Price::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:X.Res.GoodsInfo.Price)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 price_dq = 1;
  if (this->price_dq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->price_dq(), output);
  }

  // uint32 price_gold = 2;
  if (this->price_gold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->price_gold(), output);
  }

  // uint32 price_value = 3;
  if (this->price_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->price_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:X.Res.GoodsInfo.Price)
}

::google::protobuf::uint8* GoodsInfo_Price::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:X.Res.GoodsInfo.Price)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 price_dq = 1;
  if (this->price_dq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->price_dq(), target);
  }

  // uint32 price_gold = 2;
  if (this->price_gold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->price_gold(), target);
  }

  // uint32 price_value = 3;
  if (this->price_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->price_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:X.Res.GoodsInfo.Price)
  return target;
}

size_t GoodsInfo_Price::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:X.Res.GoodsInfo.Price)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 price_dq = 1;
  if (this->price_dq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price_dq());
  }

  // uint32 price_gold = 2;
  if (this->price_gold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price_gold());
  }

  // uint32 price_value = 3;
  if (this->price_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoodsInfo_Price::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:X.Res.GoodsInfo.Price)
  GOOGLE_DCHECK_NE(&from, this);
  const GoodsInfo_Price* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GoodsInfo_Price>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:X.Res.GoodsInfo.Price)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:X.Res.GoodsInfo.Price)
    MergeFrom(*source);
  }
}

void GoodsInfo_Price::MergeFrom(const GoodsInfo_Price& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:X.Res.GoodsInfo.Price)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.price_dq() != 0) {
    set_price_dq(from.price_dq());
  }
  if (from.price_gold() != 0) {
    set_price_gold(from.price_gold());
  }
  if (from.price_value() != 0) {
    set_price_value(from.price_value());
  }
}

void GoodsInfo_Price::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:X.Res.GoodsInfo.Price)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoodsInfo_Price::CopyFrom(const GoodsInfo_Price& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:X.Res.GoodsInfo.Price)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoodsInfo_Price::IsInitialized() const {
  return true;
}

void GoodsInfo_Price::Swap(GoodsInfo_Price* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GoodsInfo_Price::InternalSwap(GoodsInfo_Price* other) {
  using std::swap;
  swap(price_dq_, other->price_dq_);
  swap(price_gold_, other->price_gold_);
  swap(price_value_, other->price_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GoodsInfo_Price::GetMetadata() const {
  protobuf_GoodsInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GoodsInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GoodsInfo_GoodsAttr::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GoodsInfo_GoodsAttr::kAttrTypeFieldNumber;
const int GoodsInfo_GoodsAttr::kAttrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GoodsInfo_GoodsAttr::GoodsInfo_GoodsAttr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GoodsInfo_2eproto::InitDefaultsGoodsInfo_GoodsAttr();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:X.Res.GoodsInfo.GoodsAttr)
}
GoodsInfo_GoodsAttr::GoodsInfo_GoodsAttr(const GoodsInfo_GoodsAttr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&attr_type_, &from.attr_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&attr_value_) -
    reinterpret_cast<char*>(&attr_type_)) + sizeof(attr_value_));
  // @@protoc_insertion_point(copy_constructor:X.Res.GoodsInfo.GoodsAttr)
}

void GoodsInfo_GoodsAttr::SharedCtor() {
  ::memset(&attr_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attr_value_) -
      reinterpret_cast<char*>(&attr_type_)) + sizeof(attr_value_));
  _cached_size_ = 0;
}

GoodsInfo_GoodsAttr::~GoodsInfo_GoodsAttr() {
  // @@protoc_insertion_point(destructor:X.Res.GoodsInfo.GoodsAttr)
  SharedDtor();
}

void GoodsInfo_GoodsAttr::SharedDtor() {
}

void GoodsInfo_GoodsAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoodsInfo_GoodsAttr::descriptor() {
  ::protobuf_GoodsInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GoodsInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GoodsInfo_GoodsAttr& GoodsInfo_GoodsAttr::default_instance() {
  ::protobuf_GoodsInfo_2eproto::InitDefaultsGoodsInfo_GoodsAttr();
  return *internal_default_instance();
}

GoodsInfo_GoodsAttr* GoodsInfo_GoodsAttr::New(::google::protobuf::Arena* arena) const {
  GoodsInfo_GoodsAttr* n = new GoodsInfo_GoodsAttr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GoodsInfo_GoodsAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:X.Res.GoodsInfo.GoodsAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&attr_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attr_value_) -
      reinterpret_cast<char*>(&attr_type_)) + sizeof(attr_value_));
  _internal_metadata_.Clear();
}

bool GoodsInfo_GoodsAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:X.Res.GoodsInfo.GoodsAttr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 attr_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attr_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 attr_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attr_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:X.Res.GoodsInfo.GoodsAttr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:X.Res.GoodsInfo.GoodsAttr)
  return false;
#undef DO_
}

void GoodsInfo_GoodsAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:X.Res.GoodsInfo.GoodsAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 attr_type = 1;
  if (this->attr_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->attr_type(), output);
  }

  // uint32 attr_value = 2;
  if (this->attr_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->attr_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:X.Res.GoodsInfo.GoodsAttr)
}

::google::protobuf::uint8* GoodsInfo_GoodsAttr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:X.Res.GoodsInfo.GoodsAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 attr_type = 1;
  if (this->attr_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->attr_type(), target);
  }

  // uint32 attr_value = 2;
  if (this->attr_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->attr_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:X.Res.GoodsInfo.GoodsAttr)
  return target;
}

size_t GoodsInfo_GoodsAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:X.Res.GoodsInfo.GoodsAttr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 attr_type = 1;
  if (this->attr_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attr_type());
  }

  // uint32 attr_value = 2;
  if (this->attr_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attr_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoodsInfo_GoodsAttr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:X.Res.GoodsInfo.GoodsAttr)
  GOOGLE_DCHECK_NE(&from, this);
  const GoodsInfo_GoodsAttr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GoodsInfo_GoodsAttr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:X.Res.GoodsInfo.GoodsAttr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:X.Res.GoodsInfo.GoodsAttr)
    MergeFrom(*source);
  }
}

void GoodsInfo_GoodsAttr::MergeFrom(const GoodsInfo_GoodsAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:X.Res.GoodsInfo.GoodsAttr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.attr_type() != 0) {
    set_attr_type(from.attr_type());
  }
  if (from.attr_value() != 0) {
    set_attr_value(from.attr_value());
  }
}

void GoodsInfo_GoodsAttr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:X.Res.GoodsInfo.GoodsAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoodsInfo_GoodsAttr::CopyFrom(const GoodsInfo_GoodsAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:X.Res.GoodsInfo.GoodsAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoodsInfo_GoodsAttr::IsInitialized() const {
  return true;
}

void GoodsInfo_GoodsAttr::Swap(GoodsInfo_GoodsAttr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GoodsInfo_GoodsAttr::InternalSwap(GoodsInfo_GoodsAttr* other) {
  using std::swap;
  swap(attr_type_, other->attr_type_);
  swap(attr_value_, other->attr_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GoodsInfo_GoodsAttr::GetMetadata() const {
  protobuf_GoodsInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GoodsInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GoodsInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GoodsInfo::kGoodsIdFieldNumber;
const int GoodsInfo::kNameFieldNumber;
const int GoodsInfo::kSexFieldNumber;
const int GoodsInfo::kLevelLimitFieldNumber;
const int GoodsInfo::kClubVipLevelFieldNumber;
const int GoodsInfo::kQb2FieldNumber;
const int GoodsInfo::kConsumeTypeFieldNumber;
const int GoodsInfo::kTimeUnitFieldNumber;
const int GoodsInfo::kIsOnlineFieldNumber;
const int GoodsInfo::kCanBuyFieldNumber;
const int GoodsInfo::kCanRechargeFieldNumber;
const int GoodsInfo::kOnlineTimeFieldNumber;
const int GoodsInfo::kOfflineTimeFieldNumber;
const int GoodsInfo::kPrivilegedPlatIdListFieldNumber;
const int GoodsInfo::kPrivilegedPlatIsOnlineFieldNumber;
const int GoodsInfo::kPrivilegedPlatCanBuyFieldNumber;
const int GoodsInfo::kPrivilegedPlatCanRechargeFieldNumber;
const int GoodsInfo::kPaymentTermsFieldNumber;
const int GoodsInfo::kValidTimeFieldNumber;
const int GoodsInfo::kSortPriorityFieldNumber;
const int GoodsInfo::kSuitNumberFieldNumber;
const int GoodsInfo::kBagSortPriorityFieldNumber;
const int GoodsInfo::kStatusFieldNumber;
const int GoodsInfo::kRankFieldNumber;
const int GoodsInfo::kPriceDiscountFieldNumber;
const int GoodsInfo::kVipDiscountFieldNumber;
const int GoodsInfo::kPriceTableFieldNumber;
const int GoodsInfo::kGoodsAttrFieldNumber;
const int GoodsInfo::kDescriptionFieldNumber;
const int GoodsInfo::kLimitIdFieldNumber;
const int GoodsInfo::kSubSystemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GoodsInfo::GoodsInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GoodsInfo_2eproto::InitDefaultsGoodsInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:X.Res.GoodsInfo)
}
GoodsInfo::GoodsInfo(const GoodsInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      privileged_plat_id_list_(from.privileged_plat_id_list_),
      price_table_(from.price_table_),
      goods_attr_(from.goods_attr_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  online_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.online_time().size() > 0) {
    online_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_time_);
  }
  offline_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.offline_time().size() > 0) {
    offline_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offline_time_);
  }
  valid_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.valid_time().size() > 0) {
    valid_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valid_time_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  subsystemid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subsystemid().size() > 0) {
    subsystemid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subsystemid_);
  }
  ::memcpy(&goods_id_, &from.goods_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_id_) -
    reinterpret_cast<char*>(&goods_id_)) + sizeof(limit_id_));
  // @@protoc_insertion_point(copy_constructor:X.Res.GoodsInfo)
}

void GoodsInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offline_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valid_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subsystemid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&goods_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_id_) -
      reinterpret_cast<char*>(&goods_id_)) + sizeof(limit_id_));
  _cached_size_ = 0;
}

GoodsInfo::~GoodsInfo() {
  // @@protoc_insertion_point(destructor:X.Res.GoodsInfo)
  SharedDtor();
}

void GoodsInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offline_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valid_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subsystemid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GoodsInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoodsInfo::descriptor() {
  ::protobuf_GoodsInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GoodsInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GoodsInfo& GoodsInfo::default_instance() {
  ::protobuf_GoodsInfo_2eproto::InitDefaultsGoodsInfo();
  return *internal_default_instance();
}

GoodsInfo* GoodsInfo::New(::google::protobuf::Arena* arena) const {
  GoodsInfo* n = new GoodsInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GoodsInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:X.Res.GoodsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  privileged_plat_id_list_.Clear();
  price_table_.Clear();
  goods_attr_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  online_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offline_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valid_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subsystemid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&goods_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_id_) -
      reinterpret_cast<char*>(&goods_id_)) + sizeof(limit_id_));
  _internal_metadata_.Clear();
}

bool GoodsInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:X.Res.GoodsInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 goods_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goods_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level_limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 club_vip_level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &club_vip_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 qb_2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qb_2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 consume_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &consume_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 time_unit = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_unit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 is_online = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &is_online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 can_buy = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &can_buy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 can_recharge = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &can_recharge_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes online_time = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_online_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes offline_time = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_offline_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 privileged_plat_id_list = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_privileged_plat_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 114u, input, this->mutable_privileged_plat_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 privileged_plat_is_online = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &privileged_plat_is_online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 privileged_plat_can_buy = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &privileged_plat_can_buy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 privileged_plat_can_recharge = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &privileged_plat_can_recharge_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 payment_terms = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &payment_terms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes valid_time = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_valid_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sort_priority = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sort_priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 suit_number = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &suit_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bag_sort_priority = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bag_sort_priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes status = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rank = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 price_discount = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_discount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vip_discount = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vip_discount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .X.Res.GoodsInfo.Price price_table = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_price_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .X.Res.GoodsInfo.GoodsAttr goods_attr = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_goods_attr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes description = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 limit_id = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes subSystemId = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_subsystemid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:X.Res.GoodsInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:X.Res.GoodsInfo)
  return false;
#undef DO_
}

void GoodsInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:X.Res.GoodsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 goods_id = 1;
  if (this->goods_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->goods_id(), output);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // uint32 sex = 3;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sex(), output);
  }

  // uint32 level_limit = 4;
  if (this->level_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->level_limit(), output);
  }

  // int32 club_vip_level = 5;
  if (this->club_vip_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->club_vip_level(), output);
  }

  // int32 qb_2 = 6;
  if (this->qb_2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->qb_2(), output);
  }

  // uint32 consume_type = 7;
  if (this->consume_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->consume_type(), output);
  }

  // uint32 time_unit = 8;
  if (this->time_unit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->time_unit(), output);
  }

  // uint32 is_online = 9;
  if (this->is_online() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->is_online(), output);
  }

  // uint32 can_buy = 10;
  if (this->can_buy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->can_buy(), output);
  }

  // uint32 can_recharge = 11;
  if (this->can_recharge() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->can_recharge(), output);
  }

  // bytes online_time = 12;
  if (this->online_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->online_time(), output);
  }

  // bytes offline_time = 13;
  if (this->offline_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->offline_time(), output);
  }

  // repeated uint32 privileged_plat_id_list = 14;
  if (this->privileged_plat_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _privileged_plat_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->privileged_plat_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->privileged_plat_id_list(i), output);
  }

  // uint32 privileged_plat_is_online = 15;
  if (this->privileged_plat_is_online() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->privileged_plat_is_online(), output);
  }

  // uint32 privileged_plat_can_buy = 16;
  if (this->privileged_plat_can_buy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->privileged_plat_can_buy(), output);
  }

  // uint32 privileged_plat_can_recharge = 17;
  if (this->privileged_plat_can_recharge() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->privileged_plat_can_recharge(), output);
  }

  // uint32 payment_terms = 18;
  if (this->payment_terms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->payment_terms(), output);
  }

  // bytes valid_time = 19;
  if (this->valid_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      19, this->valid_time(), output);
  }

  // uint32 sort_priority = 20;
  if (this->sort_priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->sort_priority(), output);
  }

  // int32 suit_number = 21;
  if (this->suit_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->suit_number(), output);
  }

  // uint32 bag_sort_priority = 22;
  if (this->bag_sort_priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->bag_sort_priority(), output);
  }

  // bytes status = 23;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      23, this->status(), output);
  }

  // uint32 rank = 24;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->rank(), output);
  }

  // uint32 price_discount = 25;
  if (this->price_discount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->price_discount(), output);
  }

  // uint32 vip_discount = 26;
  if (this->vip_discount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->vip_discount(), output);
  }

  // repeated .X.Res.GoodsInfo.Price price_table = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->price_table_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->price_table(static_cast<int>(i)), output);
  }

  // repeated .X.Res.GoodsInfo.GoodsAttr goods_attr = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->goods_attr_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->goods_attr(static_cast<int>(i)), output);
  }

  // bytes description = 29;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      29, this->description(), output);
  }

  // uint32 limit_id = 30;
  if (this->limit_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->limit_id(), output);
  }

  // bytes subSystemId = 31;
  if (this->subsystemid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      31, this->subsystemid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:X.Res.GoodsInfo)
}

::google::protobuf::uint8* GoodsInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:X.Res.GoodsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 goods_id = 1;
  if (this->goods_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->goods_id(), target);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // uint32 sex = 3;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sex(), target);
  }

  // uint32 level_limit = 4;
  if (this->level_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->level_limit(), target);
  }

  // int32 club_vip_level = 5;
  if (this->club_vip_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->club_vip_level(), target);
  }

  // int32 qb_2 = 6;
  if (this->qb_2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->qb_2(), target);
  }

  // uint32 consume_type = 7;
  if (this->consume_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->consume_type(), target);
  }

  // uint32 time_unit = 8;
  if (this->time_unit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->time_unit(), target);
  }

  // uint32 is_online = 9;
  if (this->is_online() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->is_online(), target);
  }

  // uint32 can_buy = 10;
  if (this->can_buy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->can_buy(), target);
  }

  // uint32 can_recharge = 11;
  if (this->can_recharge() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->can_recharge(), target);
  }

  // bytes online_time = 12;
  if (this->online_time().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->online_time(), target);
  }

  // bytes offline_time = 13;
  if (this->offline_time().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->offline_time(), target);
  }

  // repeated uint32 privileged_plat_id_list = 14;
  if (this->privileged_plat_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _privileged_plat_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->privileged_plat_id_list_, target);
  }

  // uint32 privileged_plat_is_online = 15;
  if (this->privileged_plat_is_online() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->privileged_plat_is_online(), target);
  }

  // uint32 privileged_plat_can_buy = 16;
  if (this->privileged_plat_can_buy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->privileged_plat_can_buy(), target);
  }

  // uint32 privileged_plat_can_recharge = 17;
  if (this->privileged_plat_can_recharge() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->privileged_plat_can_recharge(), target);
  }

  // uint32 payment_terms = 18;
  if (this->payment_terms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->payment_terms(), target);
  }

  // bytes valid_time = 19;
  if (this->valid_time().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        19, this->valid_time(), target);
  }

  // uint32 sort_priority = 20;
  if (this->sort_priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->sort_priority(), target);
  }

  // int32 suit_number = 21;
  if (this->suit_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->suit_number(), target);
  }

  // uint32 bag_sort_priority = 22;
  if (this->bag_sort_priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->bag_sort_priority(), target);
  }

  // bytes status = 23;
  if (this->status().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        23, this->status(), target);
  }

  // uint32 rank = 24;
  if (this->rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->rank(), target);
  }

  // uint32 price_discount = 25;
  if (this->price_discount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->price_discount(), target);
  }

  // uint32 vip_discount = 26;
  if (this->vip_discount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->vip_discount(), target);
  }

  // repeated .X.Res.GoodsInfo.Price price_table = 27;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->price_table_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->price_table(static_cast<int>(i)), deterministic, target);
  }

  // repeated .X.Res.GoodsInfo.GoodsAttr goods_attr = 28;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->goods_attr_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->goods_attr(static_cast<int>(i)), deterministic, target);
  }

  // bytes description = 29;
  if (this->description().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        29, this->description(), target);
  }

  // uint32 limit_id = 30;
  if (this->limit_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->limit_id(), target);
  }

  // bytes subSystemId = 31;
  if (this->subsystemid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        31, this->subsystemid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:X.Res.GoodsInfo)
  return target;
}

size_t GoodsInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:X.Res.GoodsInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 privileged_plat_id_list = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->privileged_plat_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _privileged_plat_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .X.Res.GoodsInfo.Price price_table = 27;
  {
    unsigned int count = static_cast<unsigned int>(this->price_table_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->price_table(static_cast<int>(i)));
    }
  }

  // repeated .X.Res.GoodsInfo.GoodsAttr goods_attr = 28;
  {
    unsigned int count = static_cast<unsigned int>(this->goods_attr_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->goods_attr(static_cast<int>(i)));
    }
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // bytes online_time = 12;
  if (this->online_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->online_time());
  }

  // bytes offline_time = 13;
  if (this->offline_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->offline_time());
  }

  // bytes valid_time = 19;
  if (this->valid_time().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->valid_time());
  }

  // bytes status = 23;
  if (this->status().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->status());
  }

  // bytes description = 29;
  if (this->description().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->description());
  }

  // bytes subSystemId = 31;
  if (this->subsystemid().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->subsystemid());
  }

  // uint32 goods_id = 1;
  if (this->goods_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->goods_id());
  }

  // uint32 sex = 3;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sex());
  }

  // uint32 level_limit = 4;
  if (this->level_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level_limit());
  }

  // int32 club_vip_level = 5;
  if (this->club_vip_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->club_vip_level());
  }

  // int32 qb_2 = 6;
  if (this->qb_2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->qb_2());
  }

  // uint32 consume_type = 7;
  if (this->consume_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->consume_type());
  }

  // uint32 time_unit = 8;
  if (this->time_unit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->time_unit());
  }

  // uint32 is_online = 9;
  if (this->is_online() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->is_online());
  }

  // uint32 can_buy = 10;
  if (this->can_buy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->can_buy());
  }

  // uint32 can_recharge = 11;
  if (this->can_recharge() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->can_recharge());
  }

  // uint32 privileged_plat_is_online = 15;
  if (this->privileged_plat_is_online() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->privileged_plat_is_online());
  }

  // uint32 privileged_plat_can_buy = 16;
  if (this->privileged_plat_can_buy() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->privileged_plat_can_buy());
  }

  // uint32 privileged_plat_can_recharge = 17;
  if (this->privileged_plat_can_recharge() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->privileged_plat_can_recharge());
  }

  // uint32 payment_terms = 18;
  if (this->payment_terms() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->payment_terms());
  }

  // uint32 sort_priority = 20;
  if (this->sort_priority() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sort_priority());
  }

  // int32 suit_number = 21;
  if (this->suit_number() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->suit_number());
  }

  // uint32 bag_sort_priority = 22;
  if (this->bag_sort_priority() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bag_sort_priority());
  }

  // uint32 rank = 24;
  if (this->rank() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rank());
  }

  // uint32 price_discount = 25;
  if (this->price_discount() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price_discount());
  }

  // uint32 vip_discount = 26;
  if (this->vip_discount() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vip_discount());
  }

  // uint32 limit_id = 30;
  if (this->limit_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoodsInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:X.Res.GoodsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GoodsInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GoodsInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:X.Res.GoodsInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:X.Res.GoodsInfo)
    MergeFrom(*source);
  }
}

void GoodsInfo::MergeFrom(const GoodsInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:X.Res.GoodsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  privileged_plat_id_list_.MergeFrom(from.privileged_plat_id_list_);
  price_table_.MergeFrom(from.price_table_);
  goods_attr_.MergeFrom(from.goods_attr_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.online_time().size() > 0) {

    online_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.online_time_);
  }
  if (from.offline_time().size() > 0) {

    offline_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offline_time_);
  }
  if (from.valid_time().size() > 0) {

    valid_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valid_time_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.subsystemid().size() > 0) {

    subsystemid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subsystemid_);
  }
  if (from.goods_id() != 0) {
    set_goods_id(from.goods_id());
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.level_limit() != 0) {
    set_level_limit(from.level_limit());
  }
  if (from.club_vip_level() != 0) {
    set_club_vip_level(from.club_vip_level());
  }
  if (from.qb_2() != 0) {
    set_qb_2(from.qb_2());
  }
  if (from.consume_type() != 0) {
    set_consume_type(from.consume_type());
  }
  if (from.time_unit() != 0) {
    set_time_unit(from.time_unit());
  }
  if (from.is_online() != 0) {
    set_is_online(from.is_online());
  }
  if (from.can_buy() != 0) {
    set_can_buy(from.can_buy());
  }
  if (from.can_recharge() != 0) {
    set_can_recharge(from.can_recharge());
  }
  if (from.privileged_plat_is_online() != 0) {
    set_privileged_plat_is_online(from.privileged_plat_is_online());
  }
  if (from.privileged_plat_can_buy() != 0) {
    set_privileged_plat_can_buy(from.privileged_plat_can_buy());
  }
  if (from.privileged_plat_can_recharge() != 0) {
    set_privileged_plat_can_recharge(from.privileged_plat_can_recharge());
  }
  if (from.payment_terms() != 0) {
    set_payment_terms(from.payment_terms());
  }
  if (from.sort_priority() != 0) {
    set_sort_priority(from.sort_priority());
  }
  if (from.suit_number() != 0) {
    set_suit_number(from.suit_number());
  }
  if (from.bag_sort_priority() != 0) {
    set_bag_sort_priority(from.bag_sort_priority());
  }
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
  if (from.price_discount() != 0) {
    set_price_discount(from.price_discount());
  }
  if (from.vip_discount() != 0) {
    set_vip_discount(from.vip_discount());
  }
  if (from.limit_id() != 0) {
    set_limit_id(from.limit_id());
  }
}

void GoodsInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:X.Res.GoodsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoodsInfo::CopyFrom(const GoodsInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:X.Res.GoodsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoodsInfo::IsInitialized() const {
  return true;
}

void GoodsInfo::Swap(GoodsInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GoodsInfo::InternalSwap(GoodsInfo* other) {
  using std::swap;
  privileged_plat_id_list_.InternalSwap(&other->privileged_plat_id_list_);
  price_table_.InternalSwap(&other->price_table_);
  goods_attr_.InternalSwap(&other->goods_attr_);
  name_.Swap(&other->name_);
  online_time_.Swap(&other->online_time_);
  offline_time_.Swap(&other->offline_time_);
  valid_time_.Swap(&other->valid_time_);
  status_.Swap(&other->status_);
  description_.Swap(&other->description_);
  subsystemid_.Swap(&other->subsystemid_);
  swap(goods_id_, other->goods_id_);
  swap(sex_, other->sex_);
  swap(level_limit_, other->level_limit_);
  swap(club_vip_level_, other->club_vip_level_);
  swap(qb_2_, other->qb_2_);
  swap(consume_type_, other->consume_type_);
  swap(time_unit_, other->time_unit_);
  swap(is_online_, other->is_online_);
  swap(can_buy_, other->can_buy_);
  swap(can_recharge_, other->can_recharge_);
  swap(privileged_plat_is_online_, other->privileged_plat_is_online_);
  swap(privileged_plat_can_buy_, other->privileged_plat_can_buy_);
  swap(privileged_plat_can_recharge_, other->privileged_plat_can_recharge_);
  swap(payment_terms_, other->payment_terms_);
  swap(sort_priority_, other->sort_priority_);
  swap(suit_number_, other->suit_number_);
  swap(bag_sort_priority_, other->bag_sort_priority_);
  swap(rank_, other->rank_);
  swap(price_discount_, other->price_discount_);
  swap(vip_discount_, other->vip_discount_);
  swap(limit_id_, other->limit_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GoodsInfo::GetMetadata() const {
  protobuf_GoodsInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GoodsInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GoodsInfo_ARRAY::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GoodsInfo_ARRAY::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GoodsInfo_ARRAY::GoodsInfo_ARRAY()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GoodsInfo_2eproto::InitDefaultsGoodsInfo_ARRAY();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:X.Res.GoodsInfo_ARRAY)
}
GoodsInfo_ARRAY::GoodsInfo_ARRAY(const GoodsInfo_ARRAY& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:X.Res.GoodsInfo_ARRAY)
}

void GoodsInfo_ARRAY::SharedCtor() {
  _cached_size_ = 0;
}

GoodsInfo_ARRAY::~GoodsInfo_ARRAY() {
  // @@protoc_insertion_point(destructor:X.Res.GoodsInfo_ARRAY)
  SharedDtor();
}

void GoodsInfo_ARRAY::SharedDtor() {
}

void GoodsInfo_ARRAY::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoodsInfo_ARRAY::descriptor() {
  ::protobuf_GoodsInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GoodsInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GoodsInfo_ARRAY& GoodsInfo_ARRAY::default_instance() {
  ::protobuf_GoodsInfo_2eproto::InitDefaultsGoodsInfo_ARRAY();
  return *internal_default_instance();
}

GoodsInfo_ARRAY* GoodsInfo_ARRAY::New(::google::protobuf::Arena* arena) const {
  GoodsInfo_ARRAY* n = new GoodsInfo_ARRAY;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GoodsInfo_ARRAY::Clear() {
// @@protoc_insertion_point(message_clear_start:X.Res.GoodsInfo_ARRAY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear();
}

bool GoodsInfo_ARRAY::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:X.Res.GoodsInfo_ARRAY)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .X.Res.GoodsInfo items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:X.Res.GoodsInfo_ARRAY)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:X.Res.GoodsInfo_ARRAY)
  return false;
#undef DO_
}

void GoodsInfo_ARRAY::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:X.Res.GoodsInfo_ARRAY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .X.Res.GoodsInfo items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:X.Res.GoodsInfo_ARRAY)
}

::google::protobuf::uint8* GoodsInfo_ARRAY::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:X.Res.GoodsInfo_ARRAY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .X.Res.GoodsInfo items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->items(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:X.Res.GoodsInfo_ARRAY)
  return target;
}

size_t GoodsInfo_ARRAY::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:X.Res.GoodsInfo_ARRAY)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .X.Res.GoodsInfo items = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoodsInfo_ARRAY::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:X.Res.GoodsInfo_ARRAY)
  GOOGLE_DCHECK_NE(&from, this);
  const GoodsInfo_ARRAY* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GoodsInfo_ARRAY>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:X.Res.GoodsInfo_ARRAY)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:X.Res.GoodsInfo_ARRAY)
    MergeFrom(*source);
  }
}

void GoodsInfo_ARRAY::MergeFrom(const GoodsInfo_ARRAY& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:X.Res.GoodsInfo_ARRAY)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void GoodsInfo_ARRAY::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:X.Res.GoodsInfo_ARRAY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoodsInfo_ARRAY::CopyFrom(const GoodsInfo_ARRAY& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:X.Res.GoodsInfo_ARRAY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoodsInfo_ARRAY::IsInitialized() const {
  return true;
}

void GoodsInfo_ARRAY::Swap(GoodsInfo_ARRAY* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GoodsInfo_ARRAY::InternalSwap(GoodsInfo_ARRAY* other) {
  using std::swap;
  items_.InternalSwap(&other->items_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GoodsInfo_ARRAY::GetMetadata() const {
  protobuf_GoodsInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GoodsInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Res
}  // namespace X

// @@protoc_insertion_point(global_scope)
