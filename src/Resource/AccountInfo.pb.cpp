// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AccountInfo.proto

#include "AccountInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace X {
namespace Res {
class AccountInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountInfo>
      _instance;
} _AccountInfo_default_instance_;
class AccountInfo_ARRAYDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccountInfo_ARRAY>
      _instance;
} _AccountInfo_ARRAY_default_instance_;
}  // namespace Res
}  // namespace X
namespace protobuf_AccountInfo_2eproto {
void InitDefaultsAccountInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::X::Res::_AccountInfo_default_instance_;
    new (ptr) ::X::Res::AccountInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::X::Res::AccountInfo::InitAsDefaultInstance();
}

void InitDefaultsAccountInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAccountInfoImpl);
}

void InitDefaultsAccountInfo_ARRAYImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_AccountInfo_2eproto::InitDefaultsAccountInfo();
  {
    void* ptr = &::X::Res::_AccountInfo_ARRAY_default_instance_;
    new (ptr) ::X::Res::AccountInfo_ARRAY();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::X::Res::AccountInfo_ARRAY::InitAsDefaultInstance();
}

void InitDefaultsAccountInfo_ARRAY() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAccountInfo_ARRAYImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::AccountInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::AccountInfo, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::AccountInfo_ARRAY, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::X::Res::AccountInfo_ARRAY, items_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::X::Res::AccountInfo)},
  { 6, -1, sizeof(::X::Res::AccountInfo_ARRAY)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::X::Res::_AccountInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::X::Res::_AccountInfo_ARRAY_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "AccountInfo.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021AccountInfo.proto\022\005X.Res\"\033\n\013AccountInf"
      "o\022\014\n\004name\030\001 \001(\014\"6\n\021AccountInfo_ARRAY\022!\n\005"
      "items\030\001 \003(\0132\022.X.Res.AccountInfob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 119);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AccountInfo.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_AccountInfo_2eproto
namespace X {
namespace Res {

// ===================================================================

void AccountInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountInfo::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountInfo::AccountInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AccountInfo_2eproto::InitDefaultsAccountInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:X.Res.AccountInfo)
}
AccountInfo::AccountInfo(const AccountInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:X.Res.AccountInfo)
}

void AccountInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AccountInfo::~AccountInfo() {
  // @@protoc_insertion_point(destructor:X.Res.AccountInfo)
  SharedDtor();
}

void AccountInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountInfo::descriptor() {
  ::protobuf_AccountInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccountInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountInfo& AccountInfo::default_instance() {
  ::protobuf_AccountInfo_2eproto::InitDefaultsAccountInfo();
  return *internal_default_instance();
}

AccountInfo* AccountInfo::New(::google::protobuf::Arena* arena) const {
  AccountInfo* n = new AccountInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:X.Res.AccountInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AccountInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:X.Res.AccountInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:X.Res.AccountInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:X.Res.AccountInfo)
  return false;
#undef DO_
}

void AccountInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:X.Res.AccountInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:X.Res.AccountInfo)
}

::google::protobuf::uint8* AccountInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:X.Res.AccountInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:X.Res.AccountInfo)
  return target;
}

size_t AccountInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:X.Res.AccountInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:X.Res.AccountInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:X.Res.AccountInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:X.Res.AccountInfo)
    MergeFrom(*source);
  }
}

void AccountInfo::MergeFrom(const AccountInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:X.Res.AccountInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void AccountInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:X.Res.AccountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountInfo::CopyFrom(const AccountInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:X.Res.AccountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountInfo::IsInitialized() const {
  return true;
}

void AccountInfo::Swap(AccountInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountInfo::InternalSwap(AccountInfo* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountInfo::GetMetadata() const {
  protobuf_AccountInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccountInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccountInfo_ARRAY::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountInfo_ARRAY::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountInfo_ARRAY::AccountInfo_ARRAY()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AccountInfo_2eproto::InitDefaultsAccountInfo_ARRAY();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:X.Res.AccountInfo_ARRAY)
}
AccountInfo_ARRAY::AccountInfo_ARRAY(const AccountInfo_ARRAY& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:X.Res.AccountInfo_ARRAY)
}

void AccountInfo_ARRAY::SharedCtor() {
  _cached_size_ = 0;
}

AccountInfo_ARRAY::~AccountInfo_ARRAY() {
  // @@protoc_insertion_point(destructor:X.Res.AccountInfo_ARRAY)
  SharedDtor();
}

void AccountInfo_ARRAY::SharedDtor() {
}

void AccountInfo_ARRAY::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountInfo_ARRAY::descriptor() {
  ::protobuf_AccountInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccountInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccountInfo_ARRAY& AccountInfo_ARRAY::default_instance() {
  ::protobuf_AccountInfo_2eproto::InitDefaultsAccountInfo_ARRAY();
  return *internal_default_instance();
}

AccountInfo_ARRAY* AccountInfo_ARRAY::New(::google::protobuf::Arena* arena) const {
  AccountInfo_ARRAY* n = new AccountInfo_ARRAY;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountInfo_ARRAY::Clear() {
// @@protoc_insertion_point(message_clear_start:X.Res.AccountInfo_ARRAY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear();
}

bool AccountInfo_ARRAY::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:X.Res.AccountInfo_ARRAY)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .X.Res.AccountInfo items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:X.Res.AccountInfo_ARRAY)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:X.Res.AccountInfo_ARRAY)
  return false;
#undef DO_
}

void AccountInfo_ARRAY::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:X.Res.AccountInfo_ARRAY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .X.Res.AccountInfo items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:X.Res.AccountInfo_ARRAY)
}

::google::protobuf::uint8* AccountInfo_ARRAY::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:X.Res.AccountInfo_ARRAY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .X.Res.AccountInfo items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->items(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:X.Res.AccountInfo_ARRAY)
  return target;
}

size_t AccountInfo_ARRAY::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:X.Res.AccountInfo_ARRAY)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .X.Res.AccountInfo items = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountInfo_ARRAY::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:X.Res.AccountInfo_ARRAY)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountInfo_ARRAY* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountInfo_ARRAY>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:X.Res.AccountInfo_ARRAY)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:X.Res.AccountInfo_ARRAY)
    MergeFrom(*source);
  }
}

void AccountInfo_ARRAY::MergeFrom(const AccountInfo_ARRAY& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:X.Res.AccountInfo_ARRAY)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void AccountInfo_ARRAY::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:X.Res.AccountInfo_ARRAY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountInfo_ARRAY::CopyFrom(const AccountInfo_ARRAY& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:X.Res.AccountInfo_ARRAY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountInfo_ARRAY::IsInitialized() const {
  return true;
}

void AccountInfo_ARRAY::Swap(AccountInfo_ARRAY* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountInfo_ARRAY::InternalSwap(AccountInfo_ARRAY* other) {
  using std::swap;
  items_.InternalSwap(&other->items_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountInfo_ARRAY::GetMetadata() const {
  protobuf_AccountInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccountInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Res
}  // namespace X

// @@protoc_insertion_point(global_scope)
